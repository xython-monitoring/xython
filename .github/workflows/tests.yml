---
# yamllint disable rule:line-length
name: Build and tests

on:  # yamllint disable-line rule:truthy
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7.16", 3.8, 3.9, "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -e "."
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=16 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest
      - name: Try to setup.py
        run: |
          python setup.py install
      - name: install xymon
        run: |
          sudo apt-get -y install xymon
      - name: create root directories
        run: |
          sudo mkdir /var/log/xython
      - name: create directories
        run: |
          mkdir log www data
      - name: check XYMONVAR
        run: |
          grep -r XYMONVAR /etc/xymon
      - name: Run tload
        run: |
          xythond --tload -d --logdir log -x 0 -R --wwwdir www --vardir data
      - name: Run for 10 s
        run: |
          xythond --quit 10 -d --logdir log -x 0 -R --wwwdir www --vardir data

  build-debian:
    strategy:
      fail-fast: False
      matrix:
        os:
          - name: bullseye
          - name: bookworm
    runs-on: ${{ matrix.os.name }}-sudo
    name: build on ${{ matrix.os.name }}
    steps:
      - uses: actions/checkout@v3
      - name: Install python packages
        run: sudo apt-get -y install python3 python3-pip python-is-python3 python3-celery python3-setuptools python3-virtualenv
      - name: Try to setup.py
        run: |
          virtualenv xython
          source xython/bin/activate
          pip install .
          #pip install --prefix ~/.local .
      - name: install xymon
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo -E apt-get -y install xymon
      - name: create directories
        run: |
          mkdir log www data
      - name: check XYMONVAR
        run: |
          grep -r XYMONVAR /etc/xymon
      - name: Run tload
        run: |
          source xython/bin/activate
          xythond --tload -d --logdir log -x 0 -R --wwwdir www --vardir data
      - name: Run for 90 s
        run: |
          source xython/bin/activate
          xythond --quit 90 -d --logdir log -x 0 -R --wwwdir www --vardir data
      - name: check result of run
        run: |
          find www
          find log
          find data

  build-debian-alone:
    strategy:
      fail-fast: False
      matrix:
        os:
          - name: bullseye
          - name: bookworm
    runs-on: ${{ matrix.os.name }}-sudo
    name: build on ${{ matrix.os.name }} without xymon
    steps:
      - uses: actions/checkout@v3
      - name: Install python packages
        run: sudo apt-get -y install python3 python3-pip python-is-python3 python3-celery cmake python3-setuptools python3-virtualenv
      - name: Try to setup.py
        run: |
          virtualenv xython
          source xython/bin/activate
          pip install .
      - name: build with cmake
        run: |
          cmake -DCMAKE_INSTALL_PREFIX=$HOME/.local/ -DXYTHON_ETC=etc/xython .
          make
          make install DESTDIR=$HOME/.local/
          find |grep xymonserver
          echo "127.0.0.1 localhost conn" > $HOME/.local/etc/xython/hosts.cfg
      - name: create directories
        run: |
          mkdir log www data
      - name: Run for 90 s
        run: |
          source xython/bin/activate
          xythond --quit 90 -d --logdir log -x 0 -R --wwwdir www --vardir data --etcdir $HOME/.local/etc/xython
      - name: check result of run
        run: |
          find www
          find log
          find data

  build-ubuntu-alone:
    runs-on: ubuntu-latest
    name: build on ubuntu without xymon
    steps:
      - uses: actions/checkout@v3
      - name: Install python packages
        run: sudo apt-get -y install python3 python3-pip python-is-python3 python3-celery cmake python3-setuptools python3-wheel
      - name: Try to setup.py
        run: |
          python setup.py install --prefix ~/.local
      - name: build with cmake
        run: |
          cmake -DCMAKE_INSTALL_PREFIX=$HOME/.local/ -DXYTHON_ETC=etc/xython .
          make
          make install DESTDIR=$HOME/.local/
          find |grep xymonserver
          echo "127.0.0.1 localhost conn" > $HOME/.local/etc/xython/hosts.cfg
      - name: create directories
        run: |
          mkdir log www data
      - name: Run for 90 s
        run: |
          xythond --quit 90 -d --logdir log -x 0 -R --wwwdir www --vardir data --etcdir $HOME/.local/etc/xython/

  yamllint:
    runs-on: ubuntu-latest
    name: Test YAML files
    steps:
      - uses: actions/checkout@v3
      - name: Install yamllint
        run: sudo apt-get -y install yamllint
      - name: verify yaml files
        run: find -iname '*.yml' | xargs --no-run-if-empty yamllint
#  ruff:
#    runs-on: ubuntu-latest
#    name: Test python with ruff
#    steps:
#      - uses: actions/checkout@v3
#      - uses: chartboost/ruff-action@v1

#  markdownlint:
#    runs-on: ubuntu-latest
#    name: Test markdown
#    steps:
#      - uses: actions/checkout@v2
#      - name: Run markdownlint
#        uses: actionshub/markdownlint@main
  debian-pkg:
    strategy:
      matrix:
        os: [bullseye, bookworm]
    runs-on: ${{ matrix.os }}-sudo
    name: build debian ${{ matrix.os }} package
    steps:
      - uses: actions/checkout@v3
      - name: Install packages
        run: sudo apt-get -y install apache2 devscripts gnupg python3-setuptools debhelper-compat dh-apache2 dh-python python3-dev python3-distutils-extra dh-cmake python3-celery
      - name: create orig targz
        run: cd .. && tar czf xython_0-1.orig.tar.gz xython
      - name: Run ls
        run: ls -l
      - name: Run debuild
        run: debuild -i -us -uc -b
      - name: Check content of package
        run: find
      - name: Install package
        run: sudo dpkg -i ../*deb
      - name: Verify xython user was created
        run: grep xython /etc/passwd
      - name: Move package deb
        run: mv ../*deb .
      - name: Keep generated deb
        uses: actions/upload-artifact@v3
        with:
          name: debianpkg
          path: xython*deb
