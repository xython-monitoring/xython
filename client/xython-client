#!/bin/sh

export LANG=C
export LC_ALL=C

iwhich() {
	IWHICH=""
	for pa in /sbin /usr/sbin /bin /usr/bin
	do
		if [ -x "${pa}/$1" ];then
			IWHICH="${pa}/$1"
			return 0
		fi
	done
	return 1
}

# if $1 is busybox, return 0
is_busybox() {
	$1 --help 2>&1 |grep -qi busybox
	return $?
}

# return 0 if time $1 is elapsed since last run for $2
# if $1==ONCE run only once
run_less() {
	if [ ! -e $STATEDIR ];then
		mkdir -p $STATEDIR 2>/dev/null
		if [ $? -ne 0 ];then
			return 0
		fi
	fi
	# verify write access
	touch $STATEDIR/writetest 2>/dev/null
	if [ $? -ne 0 ];then
		return 0
	fi
	STATEFILE="$STATEDIR/$2.lastrun"
	if [ -e "$STATEFILE" ];then
		if [ "$1" = "ONCE" ];then
			return 1
		fi
		MINUTES=$(($1/60))
		find --help > $STATEDIR/find.test 2>&1
		# Verify find support mmin, old busybox do not have it
		grep -q mmin $STATEDIR/find.test
		if [ $? -eq 0 ];then
			find $STATEFILE -mmin +$MINUTES |grep -q "$STATEFILE"
			FI=$?
			if [ $FI -ne 0 ];then
				return 1
			fi
		else
			# stat is not availlable on some platform
			# busybox stat do not support format=%Y
			STAT="$(stat --format=%Y $STATEFILE 2>/dev/null)"
			if [ $? -ne 0 ];then
				STAT=0
			fi
			NOW="$(date +%s)"
			DIFF_STAT=$((NOW-STAT))
			if [ $DIFF_STAT -le $1 ];then
				return 1
			fi
		fi
	else
		touch $STATEFILE
		return 0
	fi
	touch $STATEFILE
	return 0
}

SERVEROSTYPE="$(uname -s | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ/' 'abcdefghijklmnopqrstuvwxyz_')"	# This systems operating system in lowercase
MACHINEDOTS="$(uname -n)"
DPKG=0
RPM=0
STATEDIR='/run/xython-client'

echo "client $MACHINEDOTS.$SERVEROSTYPE $SERVEROSTYPE"
echo "[date]"
date
echo "[uname]"
uname -rsmn
echo "[osversion]"
if [ -x /bin/lsb_release ]; then
	/bin/lsb_release -r -i -s
	TMPF=$(mktemp)
	/bin/lsb_release -a 2>/dev/null > $TMPF
	grep -qi 'ubuntu' $TMPF
	if [ $? -eq 0 ];then
		DPKG=1
	fi
	grep -qi 'debian' $TMPF
	if [ $? -eq 0 ];then
		DPKG=1
	fi
	cat $TMPF
	rm $TMPF
elif [ -x /usr/bin/lsb_release ]; then
	/usr/bin/lsb_release -r -i -s
	/usr/bin/lsb_release -a 2>/dev/null
elif [ -f /etc/redhat-release ]; then
	cat /etc/redhat-release
	RPM=1
elif [ -f /etc/gentoo-release ]; then
	cat /etc/gentoo-release
elif [ -f /etc/debian_version ]; then
	echo "Debian $(cat /etc/debian_version)"
	DPKG=1
elif [ -f /etc/SuSE-release ]; then
	# deprecated since 13.1 and removed since 15.0
	# https://en.opensuse.org/Etc_SuSE-release
	cat /etc/SuSE-release
elif [ -f /etc/slackware-version ]; then
	cat /etc/slackware-version
elif [ -f /etc/mandrake-release ]; then
	cat /etc/mandrake-release
	RPM=1
elif [ -f /etc/rocky-release ]; then
	cat /etc/rocky-release
	RPM=1
elif [ -f /etc/fedora-release ]; then
	cat /etc/fedora-release
	RPM=1
elif [ -f /etc/arch-release ]; then
	cat /etc/arch-release
fi

echo "[uptime]"
uptime

# on libreelec, no who
# on ubnt, no who
who --version 2>/dev/null >/dev/null
if [ $? -eq 0 ];then
echo "[who]"
who
fi

ISLINUX=0
SIMPLE_DF=1
case $(uname) in
Linux)
	ISLINUX=1
	# detect busybox df
	df --help 2>&1| grep -qi busybox
	if [ $? -ne 0 ];then
		SIMPLE_DF=0
	fi
;;
esac

echo "[df]"
if [ $SIMPLE_DF -eq 1 ];then
	df
else
EXCLUDES=$(grep nodev /proc/filesystems | grep -v rootfs | awk '{print $2}' | xargs echo | sed -e 's! ! -x !g')
if [ -e /dev/root ];then
	# readlink -m do not work with busybox
	ROOTFS=$(readlink -m /dev/root)
else
	ROOTFS='unset'
fi

# TODO busybox does not like -l
# TODO FreeBSD does not like -x
df -Pl -x iso9660 -x "$EXCLUDES" | sed -e '/^[^ 	][^ 	]*$/{
N
s/[ 	]*\n[ 	]*/ /
}' -e "s&^rootfs&${ROOTFS}&"

# busybox does not support -i
echo "[inode]"
df -Pil -x iso9660 -x "$EXCLUDES" | sed -e '/^[^ 	][^ 	]*$/{
N
s/[ 	]*\n[ 	]*/ /
}' -e "s&^rootfs&${ROOTFS}&"
fi
#end !busybox

echo "[mount]"
mount


# BSD does not have free
case $(uname) in
Linux)
echo "[free]"
free
;;
FreeBSD)
TOTAL=$(sysctl -n hw.physmem)
#USER=$(sysctl -n hw.usermem)
#PAGESIZE=$(sysctl -n hw.pagesize)
FREE=$(sysctl vm.vmtotal|grep 'Free Memory' | grep -o '[0-9]*')
#echo "               total        used        free      shared  buff/cache   available"
#echo "Mem:     $TOTAL    $(($TOTAL-$USER))     $USER    $USER    $USER     $USER"
echo "[meminfo]"
echo "Total:$((TOTAL/1048576))"
echo "Free:$((FREE/1024))"
echo "[swapinfo]"
swapinfo -k
echo "[vmtotal]"
sysctl vm.vmtotal
;;
OpenBSD)
TOTAL=$(sysctl -n hw.physmem)
#echo "[meminfo]"
echo "Total:$((TOTAL/1048576))"
#echo "Free:$((FREE/1024))"
;;
esac

# TODO detect if ifconfig is present
echo "[ifconfig]"
case $(uname) in
Linux)
/bin/ifconfig 2>/dev/null
;;
OpenBSD)
ifconfig -A
;;
FreeBSD)
ifconfig -a
;;
esac

PORTS_DONE=0
# /sbin/ss on gentoo
# /usr/bin/ss on bookworm
iwhich ss
if [ -n "$IWHICH" ];then
	echo "[ss]"
	ss -antup
	PORTS_DONE=1
fi

iwhich netstat
if [ -n "$IWHICH" ];then
	echo "[route]"
	netstat -rn

	# busybox does not like -s
	is_busybox netstat
	if [ $? -ne 0 ];then
		echo "[netstat]"
		netstat -s
	fi
	if [ $PORTS_DONE -eq 0 ];then
		echo "[ports]"
		# Bug in RedHat's netstat spews annoying error messages. 
		netstat -antu 2>/dev/null
		PORTS_DONE=1
	fi
fi
if [ $PORTS_DONE -eq 0 ];then
	case $(uname) in
	OpenBSD)
		echo "[ports]"
		netstat -na -f inet; netstat -na -f inet6
	;;
	FreeBSD)
		echo "[ports]"
		netstat -Wna -f inet; netstat -Wna -f inet6
	;;
	esac
fi

echo "[ifstat]"
case $(uname) in
Linux)
/bin/ifconfig 2>/dev/null
;;
OpenBSD)
	netstat -i -b -n | grep -Ev "^lo|<Link"
;;
FreeBSD)
	netstat -ibnW | grep -E "<Link|Name" | grep -v ^lo
;;
esac

if [ -x /bin/ip ];then
	echo '[iproute2_route]'
	ip route
	ip -6 route
	echo '[iproute2_stat]'
	ip -s link show
fi

if [ -x /sbin/iptables ];then
	echo '[iptables]'
	iptables -L -v -n 2>/dev/null
	iptables -L -v -n -t nat 2>/dev/null
fi

# Report mdstat data if it exists
if test -r /proc/mdstat; then echo "[mdstat]"; cat /proc/mdstat; fi
if test -x /usr/bin/sensors
then
	echo "[lmsensors]"
	sensors
fi
if test -x /sbin/pvs
then
	echo "[lvm_pvs]"
	pvs
fi
if test -x /sbin/vgs
then
	echo "[lvm_vgs]"
	vgs
fi

echo "[ps]"
case $(uname) in
Linux)
	PSBUSYBOX=0
	ps --version 2>/dev/null >/dev/null
	if [ $? -ne 0 ];then
		PSBUSYBOX=1
	fi
	# busybox does not like -w
	if [ $PSBUSYBOX -eq 1 ];then
		ps
	else
		ps -Aww f -o pid,ppid,user,start,state,pri,pcpu,time:12,pmem,rsz:10,vsz:10,cmd
	fi
;;
FreeBSD)
	ps -axd -ww -o pid,ppid,user,start,state,pri,pcpu,cputime,pmem,rss,vsz,command
;;
OpenBSD)
	ps -ax -ww -o pid,ppid,user,start,state,pri,pcpu,cputime,pmem,rss,vsz,args
;;
*)
	ps -Aww -o pid,ppid,user,start,state,pri,pcpu,time:12,pmem,rsz:10,vsz:10,cmd
;;
esac

# $TOP must be set, the install utility should do that for us if it exists.
TOP=/usr/bin/top
if test "$TOP" != ""
then
    if test -x "$TOP"
    then
        echo "[top]"
	case $(uname) in
	Linux)
	export CPULOOP ; CPULOOP=1 ;
	$TOP -b -n 1 
	# Some top versions do not finish off the last line of output
	echo ""
	;;
	FreeBSD)
	$TOP -n 20
	;;
	OpenBSD)
	$TOP -n 20
	;;
	esac
    fi
fi

# no vmstat on LibreELEC
# no vmstat on ubnt
vmstat --version 2>/dev/null >/dev/null
if [ $? -eq 0 ];then
echo "[vmstat]"
vmstat
fi

# TODO docker ps

if [ $ISLINUX -eq 1 ];then
	is_busybox dmesg
	if [ $? -ne 0 ];then
		echo '[dmesg]'
		for lvl in emerg alert crit err warn notice
		do
			echo "##$lvl"
			dmesg --level=$lvl 2>/dev/null |sed 's,^,#,'
		done
	fi
	echo '[lsmod]'
	lsmod 2>/dev/null

	echo '[lspci]'
	lspci -kv 2>/dev/null

	if [ $DPKG -eq 1 ];then
		run_less 3600 dpkg
		# same as xymon-client patched by debian
		if [ $? -eq 0 ];then
			echo '[dpkg]'
			COLUMNS=200 dpkg -l | awk '/^..  / { print $1 " " $2 " " $3 }' | sort
		fi
	fi
	if [ $RPM -eq 1 ];then
		run_less 3600 rpm
		if [ $? -eq 0 ];then
			echo '[rpm]'
			rpm -qa | sort
		fi
	fi
fi

echo '[clientversion]'
# to be changed by package manager
CLIENTVERSION=""
if [ -z "$CLIENTVERSION" ];then
	echo "xython-client"
else
	echo "xython-client-$CLIENTVERSION"
fi
